{% set name = "lemon" %}
{% set version = "1.3.1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  # unfortunately we cannot use the official tarball because it is not
  # always 100% available. That would be:
  # url: https://lemon.cs.elte.hu/pub/sources/{{ name }}-{{ version }}.tar.gz 
  # 
  # Instead we are using a snapshot at commit id bdabbf66b2ad which correspond
  # to the same version 1.3.1 that we are supposed to work on.
  # To verify this, have a look at the file NEWS, the last update should be
  # dated 2014-07-07 Version 1.3.1 released, with the last change beind
  # #484: Require CMAKE 2.8
  url: https://lemon.cs.elte.hu/hg/lemon-1.3/archive/bdabbf66b2ad.tar.bz2
  sha256: 32bd9229cba622f1c699bea75fdaaecf629ee2065d74951642859a4638071b9c
  patches:
    # Note: switching to the conda compilers introduced a build error with
    # clang 4.0.2:
    #   lemon/path.h:231:24: error: no viable conversion from
    #  'typename PredMapPath<Digraph, NodeMap<Arc> >::RevArcIt' to 'value_type'
    # this patch is similar to the proposition in
    # https://stackoverflow.com/a/33641030
    # and uses the explicit cast operator to Arc.
    - patches/0001-fix-build-error-with-clang-4.patch
    # NOTE: this disables the installation of the glpk dlls
    # from the lemon build system. An issue has been raised upstream
    # for this:
    # http://lemon.cs.elte.hu/pipermail/lemon-devel/2017-May/000392.html
    - patches/0002-glpk_win.diff
    # The generated LEMONConfig.cmake file hard-codes static
    # library paths, even if BUILD_SHARED_LIBS=1
    # This patch fixes that.
    - patches/0003-LEMONConfig.cmake.patch
    # export symbols for shared lib on windows
    - patches/0004-allow-symbols-to-be-exported-in-shard-libs-on-win.patch  # [win]
    # C++17 does not allow 'register'
    - patches/0005-Remove-the-use-of-the-register-keyword.patch
    # allow C++17 and C++20
    - patches/0006-allow-cpp17-cpp20.patch

build:
  number: 9

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - make           # [not win]
    - patch          # [not win]
    - m2-patch       # [win]
  host:
    - glpk           # [not (win or s390x)]
    - coincbc        # [unix]
    - coin-or-utils  # [unix]
    - coin-or-cgl    # [unix]
    - coin-or-osi    # [unix]
    - coin-or-clp    # [unix]
    - coin-or-cbc    # [unix]

test:
  commands:
    - test -f $PREFIX/include/lemon/glpk.h                 # [unix]
    - test -f $PREFIX/lib/libemon.so                       # [linux]
    - test -f $PREFIX/lib/libemon.dylib                    # [osx]
    - if not exist %LIBRARY_INC%\\lemon\\glpk.h exit 1     # [win]
    - if not exist %LIBRARY_LIB%\\lemon.lib exit 1         # [win]
    - if not exist %LIBRARY_BIN%\\lemon.dll exit 1         # [win]

about:
  home: https://lemon.cs.elte.hu/trac/lemon
  license: BSL-1.0
  license_file: LICENSE
  license_family: OTHER
  summary: Library for Efficient Modeling and Optimization in Networks
  description: |
    LEMON is an open source library written in C++. It provides
    easy-to-use implementations of common data structures and algorithms
    in the area of optimization and helps implementing new ones. The main
    focus is on graphs and graph algorithms, thus it is especially
    suitable for solving design and optimization problems of
    telecommunication networks. To achieve wide usability its data
    structures and algorithms provide generic interfaces.
  doc_url: https://lemon.cs.elte.hu/trac/lemon/wiki/Documentation
  dev_url: https://lemon.cs.elte.hu/hg/lemon

extra:
  recipe-maintainers:
    - bluescarni
    - stuarteberg
    - k-dominik
